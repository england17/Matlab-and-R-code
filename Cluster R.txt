Exercise 4.24
By R
dat <- read.table("C:/Users/nto-le01/Documents/econometrics/653/2022/cps09mar.txt")
> experience <- dat[,1]-dat[,4]-6
> mbf <- (dat[,11]==2)&(dat[,12]<=2)&(dat[,2]==1)&(experience==12)
> sam <- (dat[,11]==4)&(dat[,12]==7)&(dat[,2]==0)
> dat1 <- dat[mbf,]
> dat2 <- dat[sam,]
> # First regression
> y <- as.matrix(log(dat1[,5]/(dat1[,6]*dat1[,7])))
> x <- cbind(dat1[,4],matrix(1,nrow(dat1),1))
> xx <- t(x)%*%x
> xy <- t(x)%*%y
> beta <- solve(xx,xy)
> print(beta)
 [,1]
[1,] 0.1550389
[2,] 0.6978150
> # 3.24(a)Second regression
> y <- as.matrix(log(dat2[,5]/(dat2[,6]*dat2[,7])))#Log(wage)
> experience <- dat2[,1]-dat2[,4]-6 #experience
> exp2 <- (experience^2)/100 #experience2/100
> x <- cbind(dat2[,4],experience,exp2,matrix(1,nrow(dat2),1))#dat2[,4]=education
> xx <- t(x)%*%x
> xy <- t(x)%*%y
> beta <- solve(xx,xy)
> print(beta)
 [,1]
 0.14331647
experience 0.03557892
exp2 -0.07137808
 0.57535630
> #4.24(a)standard errors using the homoskedasticity formula and using the four covariance 
matrices
> e <- y-x%*%beta
> xxi <- solve(xx)
> leverage <- rowSums(x*(x%*%xxi))
> n <- nrow(y)
> k <- ncol(x)
> a <- n/(n-k)
> sig <-((t(e) %*% e)/(n-k))
> sig2<-sig[,1]
> u1 <- x*(e%*%matrix(1,1,k))
> u2 <- x*((e/sqrt(1-leverage))%*%matrix(1,1,k))
> u3 <- x*((e/(1-leverage))%*%matrix(1,1,k))
> xx <- solve(t(x)%*%x)
> v0 <- sig2*xx
> v1 <- xx %*% (t(u1)%*%u1) %*% xx
> v1a <- a * xx %*% (t(u1)%*%u1) %*% xx
> v2 <- xx %*% (t(u2)%*%u2) %*% xx
> v3 <- xx %*% (t(u3)%*%u3) %*% xx
> s0 <- sqrt(diag(v0)) # Homoskedastic formula
> s1 <- sqrt(diag(v1)) # HC0
> s1a <- sqrt(diag(v1a)) # HC1
> s2 <- sqrt(diag(v2)) # HC2
> s3 <- sqrt(diag(v3)) # HC3
> print(cbind(s0))
 s0
 0.01163071
experience 0.01085757
exp2 0.02957171
 0.18682987
> print(cbind(s1,s1a,s2,s3))
 s1 s1a s2 s3
 0.01152244 0.01160940 0.01169374 0.01187627
experience 0.01121874 0.01130341 0.01178237 0.01254629
exp2 0.02918124 0.02940148 0.03150154 0.03459159
 0.19362680 0.19508816 0.19702185 0.20102036


Exercise 4.26
By R
> # Load the data and create variables
> setwd('C:/Users/nto-le01/Documents/econometrics/653/2022’)
> data <- read.table("DDK2011.txt",header=TRUE,sep="\t")
> y <- scale(as.matrix(data$totalscore))#normalized
> x1 <-
noquote(cbind(data$tracking,data$agetest,data$girl,data$etpteacher,data$percenti
le, matrix(1,nrow(data),1)))
> Tracking<-x1[,1]
> Agetest<-x1[,2]
> Girl<-x1[,3]
> Etpteacher<-x1[,4]
> Percentile<-x1[,5]
> model<-lm(y~Tracking+Agetest+Girl+Etpteacher+Percentile)
> summary(model)
Call:
lm(formula = y ~ Tracking + Agetest + Girl + Etpteacher + Percentile)
Residuals:
 Min 1Q Median 3Q Max 
-2.1988 -0.6232 -0.1478 0.5157 3.5315 
Coefficients:
 Estimate Std. Error t value Pr(>|t|) 
(Intercept) -0.89052 0.30686 -2.902 0.003722 ** 
Tracking1 0.16646 0.02459 6.769 1.43e-11 ***
Agetest10 0.67745 0.23063 2.937 0.003323 ** 
Agetest11 0.71656 0.23227 3.085 0.002045 ** 
Agetest12 0.52310 0.23528 2.223 0.026230 * 
Agetest13 0.67025 0.24848 2.697 0.007009 ** 
Agetest14 0.38695 0.30977 1.249 0.211660 
Agetest15 0.53349 0.38747 1.377 0.168605 
Agetest16 0.40354 0.42737 0.944 0.345093 
Agetest18 0.18697 0.66557 0.281 0.778781 
Agetest19 2.58338 0.91365 2.828 0.004707 ** 
Agetest5 0.39007 0.91352 0.427 0.669400 
Agetest6 0.29391 0.26264 1.119 0.263161 
Agetest7 0.74121 0.23302 3.181 0.001476 ** 
Agetest8 0.84057 0.23067 3.644 0.000271 ***
Agetest9 0.77654 0.23057 3.368 0.000762 ***
Girl0 -0.01009 0.19906 -0.051 0.959594 
Girl1 0.07980 0.19898 0.401 0.688411 
Etpteacher1 0.18663 0.02325 8.028 1.19e-15 ***
Percentile0 -1.00629 0.33357 -3.017 0.002567 ** 
Percentile1 -0.87418 0.14026 -6.233 4.92e-10 ***
Percentile10 -0.86945 0.13084 -6.645 3.31e-11 ***
Percentile100 0.87384 0.23789 3.673 0.000242 ***

Percentile11 -0.64323 0.12730 -5.053 4.49e-07 ***
Percentile12 -0.75121 0.13858 -5.421 6.18e-08 ***
Percentile13 -0.79958 0.13096 -6.105 1.09e-09 ***
Percentile14 -0.67364 0.11541 -5.837 5.62e-09 ***
Percentile15 -0.59504 0.12747 -4.668 3.11e-06 ***
Percentile16 -0.68020 0.13296 -5.116 3.23e-07 ***
Percentile17 -0.57637 0.12337 -4.672 3.05e-06 ***
Percentile18 -0.80175 0.13215 -6.067 1.39e-09 ***
Percentile19 -0.42446 0.12733 -3.333 0.000863 ***
Percentile2 -0.88247 0.14654 -6.022 1.83e-09 ***
Percentile20 -0.44913 0.13376 -3.358 0.000791 ***
Percentile21 -0.52998 0.14804 -3.580 0.000346 ***
Percentile22 -0.42841 0.13357 -3.207 0.001347 ** 
Percentile23 -0.47766 0.12215 -3.911 9.32e-05 ***
Percentile24 -0.58381 0.12969 -4.502 6.88e-06 ***
Percentile25 -0.43248 0.12336 -3.506 0.000459 ***
Percentile26 -0.33481 0.12784 -2.619 0.008843 ** 
Percentile27 -0.53903 0.13728 -3.927 8.72e-05 ***
Percentile28 -0.59079 0.11907 -4.962 7.20e-07 ***
Percentile29 -0.34242 0.13588 -2.520 0.011761 * 
Percentile3 -0.76737 0.13309 -5.766 8.56e-09 ***
Percentile30 -0.34673 0.11815 -2.935 0.003353 ** 
Percentile31 -0.52419 0.13579 -3.860 0.000114 ***
Percentile32 -0.32989 0.12977 -2.542 0.011044 * 
Percentile33 -0.37553 0.12937 -2.903 0.003713 ** 
Percentile34 -0.37361 0.12247 -3.051 0.002295 ** 
Percentile35 -0.42658 0.12356 -3.452 0.000560 ***
Percentile36 -0.21338 0.12042 -1.772 0.076449 . 
Percentile37 -0.27463 0.13464 -2.040 0.041421 * 
Percentile38 -0.24956 0.12263 -2.035 0.041889 * 
Percentile39 -0.25880 0.12236 -2.115 0.034465 * 
Percentile4 -0.92148 0.15441 -5.968 2.55e-09 ***
Percentile40 -0.28597 0.13705 -2.087 0.036968 * 
Percentile41 -0.10063 0.11807 -0.852 0.394101 
Percentile42 -0.10053 0.12414 -0.810 0.418080 
Percentile43 -0.09993 0.12155 -0.822 0.411041 
Percentile44 -0.19741 0.12834 -1.538 0.124062 
Percentile45 -0.09312 0.13612 -0.684 0.493935 
Percentile46 -0.25776 0.13105 -1.967 0.049242 * 
Percentile47 -0.19402 0.12532 -1.548 0.121628 
Percentile48 -0.18233 0.12141 -1.502 0.133234 
Percentile49 0.04106 0.12056 0.341 0.733448 
Percentile5 -0.94345 0.13338 -7.073 1.70e-12 ***
Percentile50 -0.27328 0.14030 -1.948 0.051478 . 
Percentile51 0.01608 0.13456 0.120 0.904855 
Percentile52 -0.24789 0.12309 -2.014 0.044065 * 
Percentile53 -0.21548 0.13075 -1.648 0.099422 . 
Percentile54 -0.13100 0.12402 -1.056 0.290881 
Percentile55 -0.09761 0.12177 -0.802 0.422847 
Percentile56 -0.05951 0.12631 -0.471 0.637582 
Percentile57 0.05352 0.12238 0.437 0.661916 

Percentile58 -0.03077 0.12124 -0.254 0.799670 
Percentile59 -0.09427 0.14466 -0.652 0.514667 
Percentile6 -0.62045 0.14015 -4.427 9.74e-06 ***
Percentile60 0.05691 0.14437 0.394 0.693449 
Percentile61 0.11187 0.11480 0.974 0.329872 
Percentile62 0.14002 0.13103 1.069 0.285295 
Percentile63 0.05166 0.11824 0.437 0.662192 
Percentile64 -0.04767 0.12347 -0.386 0.699448 
Percentile65 0.08822 0.11949 0.738 0.460362 
Percentile66 0.24173 0.12943 1.868 0.061865 . 
Percentile67 -0.05193 0.13562 -0.383 0.701775 
Percentile68 0.10105 0.12628 0.800 0.423612 
Percentile69 0.10171 0.11781 0.863 0.388013 
Percentile7 -0.87164 0.11935 -7.303 3.20e-13 ***
Percentile70 0.09169 0.13416 0.683 0.494328 
Percentile71 0.10075 0.12442 0.810 0.418141 
Percentile72 0.40344 0.12234 3.298 0.000981 ***
Percentile73 0.13852 0.12610 1.099 0.272002 
Percentile74 0.32024 0.12185 2.628 0.008605 ** 
Percentile75 0.25915 0.11401 2.273 0.023059 * 
Percentile76 0.35645 0.12223 2.916 0.003557 ** 
---
Signif. codes: 0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
Residual standard error: 0.8748 on 5675 degrees of freedom
Multiple R-squared: 0.2505, Adjusted R-squared: 0.2348
F-statistic: 15.94 on 119 and 5675 DF, p-value: < 2.2e-16
> y <- scale(as.matrix(data$totalscore))#normalized
> n <- nrow(y)
> x <- cbind(as.matrix(data$tracking),matrix(1,n,1))
> schoolid <- as.matrix(data$schoolid)
> k <- ncol(x)
> xx <- t(x)%*%x
> invx <- solve(xx)
> beta <- solve(xx,t(x)%*%y)
> xe <- x*rep(y-x%*%beta,times=k)
> e <- y-x%*%beta
> xxi <- solve(xx)
> leverage <- rowSums(x*(x%*%xxi))
> n <- nrow(y)
> k <- ncol(x)
> a <- n/(n-k)
> sig <-((t(e) %*% e)/(n-k))
> sig2<-sig[,1]
> xx <- solve(t(x)%*%x)
> v0 <- sig2*xx
> se<- sqrt(diag(v0)) 
> print(se)
[1] 0.02622329 0.01880795
> # Clustered robust standard error
> xe_sum <- rowsum(xe,schoolid)
> G <- nrow(xe_sum)
> omega <- t(xe_sum)%*%xe_sum
> scale <- G/(G-1)*(n-1)/(n-k)
> V_clustered <- scale*invx%*%omega%*%invx
> se_clustered <- sqrt(diag(V_clustered))
> print(beta)
 [,1]
[1,] 0.13789390
[2,] -0.07093386
> print(se_clustered)
[1] 0.07718409 0.05434114
> b<-print(data.frame(est = beta, se = se_clustered))
 est se
1 0.13789390 0.07718409
2 -0.07093386 0.05434114


7.28
BY R
# Load the data and create subsamples
> rm(list = ls())
> setwd('C:/Users/nto-le01/Documents/econometrics/653/2022')
> dat <- read.table("cps09mar.txt")
> mbf <- (dat[,11]==1)&(dat[,3]==1)&(dat[,2]==0)
> 
> dat1 <- dat[mbf,]
> 
> # A
> y <- as.matrix(log(dat1[,5]/(dat1[,6]*dat1[,7])))
> experience <- dat1[,1]-dat1[,4]-6
> exp2 <- (experience^2)/100
> education <- dat1[,4]
> 
> x <- cbind(education,experience,exp2,matrix(1,nrow(dat1),1))
> xx <- t(x)%*%x
> xy <- t(x)%*%y
> beta <- solve(xx,xy)
> print(beta)
 [,1]
education 0.11376132
experience 0.04551743
exp2 -0.07415395
 0.94797879
> Reg <- lm(y~education+experience+exp2)
> summary(Reg)
Call:
lm(formula = y ~ education + experience + exp2)

Residuals:
 Min 1Q Median 3Q Max 
-11.1986 -0.3067 0.0139 0.3338 2.7584 
Coefficients:
 Estimate Std. Error t value Pr(>|t|) 
(Intercept) 0.947979 0.023306 40.67 <2e-16 ***
education 0.113761 0.001379 82.49 <2e-16 ***
experience 0.045517 0.001219 37.34 <2e-16 ***
exp2 -0.074154 0.002500 -29.66 <2e-16 ***
---
Signif. codes: 
0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
Residual standard error: 0.6041 on 24340 degrees of freedom
Multiple R-squared: 0.262, Adjusted R-squared: 0.2619 
F-statistic: 2881 on 3 and 24340 DF, p-value: < 2.2e-16



Exercise 8.19 
By R
> # ALoad the data and create subsamples
> rm(list = ls())
> setwd('C:/Users/nto-le01/Documents/econometrics/653/2022')
> dat <- read.table("cps09mar.txt")
> experience <- dat[,1]-dat[,4]-6
> mbf <- (dat[,11]==1)&(dat[,3]=1)&(dat[,2]==0) 
> dat1 <- dat[mbf,]
> # A
> y <- as.matrix(log(dat1[,5]/(dat1[,6]*dat1[,7])))
> experience <- dat1[,1]-dat1[,4]-6
> exp2 <- (experience^2)/100
> education <- dat1[,4]
> married1 <- ifelse(dat1[,12]=='1',1,0)
> married2 <- ifelse(dat1[,12]=='2',1,0)
> married3 <- ifelse(dat1[,12]=='3',1,0)
> widowed <- ifelse(dat1[,12]=='4',1,0)
> divorced <- ifelse(dat1[,12]=='5',1,0)
> separated <- ifelse(dat1[,12]=='6',1,0) 
> x <-
cbind(education,experience,exp2,married1,married2,married3,widowed,divorced,separated
,matrix(1,nrow(dat1),1))
> xx <- t(x)%*%x
> xy <- t(x)%*%y
> beta <- solve(xx,xy)
> print(beta)
 [,1]
education 0.10976355
experience 0.03708493
exp2 -0.06149572
married1 0.22492294
married2 0.42073226
married3 0.13987170
widowed 0.13991986
divorced 0.07638369
separated 0.06061996
 0.93956026
> Reg <-
lm(y~education+experience+exp2+married1+married2+married3+widowed+divorced+separ
ated)
> summary(Reg)
Call:
lm(formula = y ~ education + experience + exp2 + married1 + married2 + 
 married3 + widowed + divorced + separated)
Residuals:
 Min 1Q Median 3Q Max 
-11.2251 -0.3030 0.0152 0.3293 2.8505
Coefficients:
 Estimate Std. Error t value Pr(>|t|) 
(Intercept) 0.939560 0.023197 40.503 < 2e-16 ***
education 0.109764 0.001383 79.369 < 2e-16 ***
experience 0.037085 0.001307 28.379 < 2e-16 ***
exp2 -0.061496 0.002587 -23.768 < 2e-16 ***
married1 0.224923 0.011735 19.167 < 2e-16 ***
married2 0.420732 0.166307 2.530 0.01142 * 
married3 0.139872 0.040360 3.466 0.00053 ***
widowed 0.139920 0.054847 2.551 0.01074 * 
divorced 0.076384 0.017920 4.263 2.03e-05 ***
separated 0.060620 0.034645 1.750 0.08018 . 
Signif. codes: 
0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
Residual standard error: 0.5986 on 24334 degrees of freedom
Multiple R-squared: 0.2755, Adjusted R-squared: 0.2753 
F-statistic: 1028 on 9 and 24334 DF, p-value: < 2.2e-16
> n <- nrow(x)
> k <- ncol(x)
> # Unrestricted regression
> invx <-solve(t(x)%*%x)
> b_ls <- solve((t(x)%*%x),(t(x)%*%y))
> e_ls <- rep((y-x%*%b_ls),times=k)
> xe_ls <- x*e_ls
> V_ls <- (n/(n-k))*invx%*%(t(xe_ls)%*%xe_ls)%*%invx
> se_ls <- sqrt(diag(V_ls))
> print(cbind(b_ls, se_ls))
 se_ls
education 0.10976355 0.001529695
experience 0.03708493 0.001438855
exp2 -0.06149572 0.003069380
married1 0.22492294 0.011326772
married2 0.42073226 0.170333709
married3 0.13987170 0.040012308
widowed 0.13991986 0.069292476
divorced 0.07638369 0.017519617
separated 0.06061996 0.033771553
 0.93956026 0.024683296
> # BConstrained regression
> R <- c(0,1,1,1,1,1,1,-1,1,-1)
> as.vector(R)
[1] 0 1 1 1 1 1 1 -1 1 -1
> iR <- invx%*%R%*%solve(t(R)%*%invx%*%R)%*%t(R)
> b_cls <- b_ls - iR%*%b_ls
> e_cls <- rep((y-x%*%b_cls),times=k)
> xe_cls <- x*e_cls
> V_tilde <- (n/(n-k+1))*invx%*%(t(xe_cls)%*%xe_cls)%*%invx
> V_cls <- V_tilde - iR%*%V_tilde - V_tilde%*%t(iR) +iR%*%V_tilde%*%t(iR)
> se_cls <- sqrt(diag(V_cls));
> print(cbind(b_cls, se_cls))
 se_cls
education 0.10980148 0.001521549
experience 0.03707640 0.001439101
exp2 -0.06148946 0.003069851
married1 0.22565480 0.011124607
married2 0.46310529 0.083206892
married3 0.14295313 0.038737743
widowed 0.14501167 0.064679138
divorced 0.07683407 0.017480603
separated 0.06301172 0.032948083
 0.93848949 0.024377160
> C# Efficient minimum distance
> Vr <- V_ls%*%R%*%solve(t(R)%*%V_ls%*%R)%*%t(R)
> b_emd <- b_ls - Vr%*%b_ls
> e_emd <- rep((y-x%*%b_emd),times=k)
> xe_emd <- x*e_emd
> V2 <- (n/(n-k+1))*invx%*%(t(xe_emd)%*%xe_emd)%*%invx
> V_emd <- V2 - V2%*%R%*%solve(t(R)%*%V2%*%R)%*%t(R)%*%V2
> se_emd <- sqrt(diag(V_emd))
> print(cbind(b_emd, se_emd))
 se_emd
education 0.10980765 0.001521407
exp2 -0.06150697 0.003069349
married1 0.22552379 0.011114266
married2 0.46169069 0.083054899
married3 0.14265290 0.038721575
widowed 0.14707439 0.064252036
divorced 0.07672233 0.017475901
separated 0.06269028 0.032926713
 0.93848635 0.024377431
> res <- data.frame(b_ls=b_ls, se_ls=se_ls, b_cls=b_cls, se_cls=se_cls, b_emd=b_emd, 
se_emd=se_emd)
> print(round(res,4))
 b_ls se_ls b_cls se_cls b_emd se_emd
education 0.1098 0.0015 0.1098 0.0015 0.1098 0.0015
experience 0.0371 0.0014 0.0371 0.0014 0.0371 0.0014
exp2 -0.0615 0.0031 -0.0615 0.0031 -0.0615 0.0031
married1 0.2249 0.0113 0.2257 0.0111 0.2255 0.0111
married2 0.4207 0.1703 0.4631 0.0832 0.4617 0.0831
married3 0.1399 0.0400 0.1430 0.0387 0.1427 0.0387
widowed 0.1399 0.0693 0.1450 0.0647 0.1471 0.0643
divorced 0.0764 0.0175 0.0768 0.0175 0.0767 0.0175
separated 0.0606 0.0338 0.0630 0.0329 0.0627 0.0329
 0.9396 0.0247 0.9385 0.0244 0.9385 0.0244


